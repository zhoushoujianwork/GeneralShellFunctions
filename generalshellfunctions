#!/bin/bash
#定义 exit 3333 缺少变量退出
#定义 exit 3334 调用函数缺少参数退出



### 构建函数定义规则
#1.	函数名称定义规则，单词，连接使用短下划线_。示例：is_cmd_ok；
#2.	函数内定义的变量规则：以短下划线_开头，单词使用大写连接，不使用下划线连接。示例：_ParametersNumber；
#3.	函数内必须添加 _ParametersNumber=$# 用于向下传递判断函数引用参数正确性；
#	函数内必须添加 logout_fileandterminal "[INFO] [CMD] $FUNCNAME $1 $2" 用于打印该函数的调用时实际命令。
#4.	日志输出格式：“2020/04/29_16:06:27 [INFO] [CMD] del_dir_file_date /var/log 10”；
#5.	日志输出种类：时间+[日志级别]+[CMD]+函数执行命令；


#实例
del_dir_file_date(){
	#删除超过n天的文件，非目录;第一个参数是备份文件所在目录;第二个参数是文件保留天数
	_ParametersNumber=$#
	logout_fileandterminal "[INFO] [CMD] $FUNCNAME $1 $2"
	judge_parameters 2
	judge_parameters_dir $1
	judge_parameters_num $2

    find $1 -mtime +$2 -type f |tee -a $LOGOUT|xargs rm -f
}

# DATE_FILE=`date +%Y%m%d_%H%M%S`
# DATE_Format=`date +%Y-%m-%d`



#~~~~~~~~~~~~~~~~~~~~echo 函数改造~~~~~~~~~~~~~~~~~~~~
echo_blue(){
	#绿字无底色
	echo -e "\033[32m $1 \033[0m"
}

echo_err(){
	#白字红底输出
	echo -e "\033[41;37m $1 \033[0m"
	exit 2
}

logout_fileandterminal(){
	#输出日志同时在日志文件和输出终端中
	if [[ -z $LOGOUT ]]; then
		echo "还未定义输出日志文件，请先在shell中指定LOGOUT变量！本次使用默认log文件~/generalshellfunctions.log，若要修改，请定义LOGOUT变量。"
		# exit 3333
		LOGOUT=~/generalshellfunctions.log
	fi
	if [[ -z $1 ]]; then
		OUT="NULL (调用logout_file_terminal未指定日志内容)"
	else
		OUT=$1
	fi
	is_dir_exist $LOGOUT
	echo "`date +%Y/%m/%d_%H:%M:%S` $OUT" | tee -a $LOGOUT
}

#~~~~~~~~~~~~~~~~~~~~基础函数~~~~~~~~~~~~~~~~~~~~
is_cmd_ok(){
	#判断上一个命令是否执行成功；
    if [ $? == 0 ];then
        echo "`date +%Y/%m/%d_%H:%M:%S` CMD is OK."|tee -a $LOGOUT
    else
        echo "`date +%Y/%m/%d_%H:%M:%S` CMD is faild!"|tee -a $LOGOUT
        exit 3
    fi
}

judge_parameters(){
	#引用该函数时需要定义_ParametersNumber参数。
	#判断函数参数,使用方式：judge_parameters 参数个数
	if [[ $_ParametersNumber -ne $1 ]]; then
		logout_fileandterminal "[ERROR] ${FUNCNAME[1]} 函数参数错误，需要的参数是：$1 个"
		exit 3334
	fi 
}
judge_parameters_dir(){
	#判断参数是否为目录
	if [[ ! -d $1 ]]; then
		logout_fileandterminal "[ERROR] ${FUNCNAME[1]} 传入的参数{$1}是不存在的目录！"
		exit 3334
	fi
}
judge_parameters_num(){
	#判断参数是否为数字
	if [[ $1 -gt 0 ]]; then
		echo 
	else
		logout_fileandterminal "[ERROR] ${FUNCNAME[1]} 传入的参数{$1}不是数字！"
		exit 3334
	fi
}

is_dir_exist(){
	#判断目录是否存在，不存在创建，存在跳过；
    if [ ! -f $1 ];
    then
        mkdir -p `dirname $1`
    fi
}

android_imei(){
	#该函数用于自动构建安卓15位IMEI系列号；
	for (( i = 0; i < 3; i++ )); do
		number=$RANDOM
		if [[ $number -lt 10000  && $number -gt 1000 ]];then
			number="0"$number
		elif [[ $number -lt 1000 && $number -gt 100 ]];then
			number="00"$number
		elif [[ $number -lt 100 && $number -gt 10 ]];then
			number="000"$number
		elif [[ $number -lt 10 && $number -gt 1 ]];then
			number="0000"$number
		fi	
	 	_Android_Imei=$_Android_Imei$number
	done
	echo  $_Android_Imei
}

progress_bar(){
	#精度条功能，需要2个参数，第一个是现在个数，第二个是总数；
	_ParametersNumber=$#
	judge_parameters 2
	judge_parameters_num $1
	judge_parameters_num $2
	local current=$1; local total=$2
	local now=$((current*100/total))
	# let number be EVEN
	[[ $((now % 2)) -eq 1 ]]&&let now++
	# show #######
	local str=$(for i in `seq 1 $((now/2))`; do printf '#'; done)
		printf "\r %s [%-50s]%d%%" "Loading" "$str"  $now;
		sleep 0.2;
		str+='#';
		# echo
}

